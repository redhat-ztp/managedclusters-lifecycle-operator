
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: managedclustergroupworks.work.open-cluster-management-extension.io
spec:
  group: work.open-cluster-management-extension.io
  names:
    kind: ManagedClusterGroupWork
    listKind: ManagedClusterGroupWorkList
    plural: managedclustergroupworks
    singular: managedclustergroupwork
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ManagedClusterGroupWork is the Schema for the managedclustergroupworks
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ManagedClusterGroupWorkSpec defines the desired state of
              ManagedClusterGroupWork
            properties:
              clusterSelector:
                description: A label selector is a label query over a set of resources.
                  The result of matchLabels and matchExpressions are ANDed. An empty
                  label selector matches all objects. A null label selector matches
                  no objects.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              clusters:
                description: Clusters listed with name will be selected and ignoring
                  other clusterSelectors
                items:
                  description: Generic Cluster Reference
                  properties:
                    name:
                      description: Cluster Name
                      type: string
                  required:
                  - name
                  type: object
                type: array
              managedClusterLabelWork:
                description: Label actions to be applied on the selected clusters
                properties:
                  afterWork:
                    description: After the manifest work is done make label the selected
                      managed cluster.
                    properties:
                      addClusterLabels:
                        additionalProperties:
                          type: string
                        description: AddClusterLabels is a map of key/value pairs
                          labels that will be added to the selected managedClusters.
                          If the label already exist it will be update its value
                        type: object
                      deleteClusterLabels:
                        additionalProperties:
                          type: string
                        description: DeleteClusterLabels is a map of key/value pairs
                          labels that will be deleted from the selected managedClusters.
                        type: object
                    type: object
                  beforeWork:
                    description: Before starting the manifest work label the selected
                      managed cluster.
                    properties:
                      addClusterLabels:
                        additionalProperties:
                          type: string
                        description: AddClusterLabels is a map of key/value pairs
                          labels that will be added to the selected managedClusters.
                          If the label already exist it will be update its value
                        type: object
                      deleteClusterLabels:
                        additionalProperties:
                          type: string
                        description: DeleteClusterLabels is a map of key/value pairs
                          labels that will be deleted from the selected managedClusters.
                        type: object
                    type: object
                type: object
              manifesWorks:
                description: List of manifestWorks to be applied on the selected clusters
                items:
                  description: ManifestWork represents a manifests workload that hub
                    wants to deploy on the managed cluster. A manifest workload is
                    defined as a set of Kubernetes resources. ManifestWork must be
                    created in the cluster namespace on the hub, so that agent on
                    the corresponding managed cluster can access this resource and
                    deploy on the managed cluster.
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: Spec represents a desired configuration of work
                        to be deployed on the managed cluster.
                      properties:
                        deleteOption:
                          description: DeleteOption represents deletion strategy when
                            the manifestwork is deleted. Foreground deletion strategy
                            is applied to all the resource in this manifestwork if
                            it is not set.
                          properties:
                            propagationPolicy:
                              default: Foreground
                              description: propagationPolicy can be Foreground, Orphan
                                or SelectivelyOrphan SelectivelyOrphan should be rarely
                                used.  It is provided for cases where particular resources
                                is transfering ownership from one ManifestWork to
                                another or another management unit. Setting this value
                                will allow a flow like 1. create manifestwork/2 to
                                manage foo 2. update manifestwork/1 to selectively
                                orphan foo 3. remove foo from manifestwork/1 without
                                impacting continuity because manifestwork/2 adopts
                                it.
                              enum:
                              - Foreground
                              - Orphan
                              - SelectivelyOrphan
                              type: string
                            selectivelyOrphans:
                              description: selectivelyOrphan represents a list of
                                resources following orphan deletion stratecy
                              properties:
                                orphaningRules:
                                  description: orphaningRules defines a slice of orphaningrule.
                                    Each orphaningrule identifies a single resource
                                    included in this manifestwork
                                  items:
                                    description: OrphaningRule identifies a single
                                      resource included in this manifestwork to be
                                      orphaned
                                    properties:
                                      group:
                                        description: Group is the API Group of the
                                          Kubernetes resource, empty string indicates
                                          it is in core group.
                                        type: string
                                      name:
                                        description: Name is the name of the Kubernetes
                                          resource.
                                        type: string
                                      namespace:
                                        description: Name is the namespace of the
                                          Kubernetes resource, empty string indicates
                                          it is a cluster scoped resource.
                                        type: string
                                      resource:
                                        description: Resource is the resource name
                                          of the Kubernetes resource.
                                        type: string
                                    required:
                                    - name
                                    - resource
                                    type: object
                                  type: array
                              type: object
                          type: object
                        manifestConfigs:
                          description: ManifestConfigs represents the configurations
                            of manifests defined in workload field.
                          items:
                            description: ManifestConfigOption represents the configurations
                              of a manifest defined in workload field.
                            properties:
                              feedbackRules:
                                description: FeedbackRules defines what resource status
                                  field should be returned.
                                items:
                                  properties:
                                    jsonPaths:
                                      description: JsonPaths defines the json path
                                        under status field to be synced.
                                      items:
                                        properties:
                                          name:
                                            description: Name represents the alias
                                              name for this field
                                            type: string
                                          path:
                                            description: Path represents the json
                                              path of the field under status. The
                                              path must point to a field with single
                                              value in the type of integer, bool or
                                              string. If the path points to a non-existing
                                              field, no value will be returned. If
                                              the path points to a structure, map
                                              or slice, no value will be returned
                                              and the status conddition of StatusFeedBackSynced
                                              will be set as false. Ref to https://kubernetes.io/docs/reference/kubectl/jsonpath/
                                              on how to write a jsonPath.
                                            type: string
                                          version:
                                            description: Version is the version of
                                              the Kubernetes resource. If it is not
                                              specified, the resource with the semantically
                                              latest version is used to resolve the
                                              path.
                                            type: string
                                        required:
                                        - name
                                        - path
                                        type: object
                                      type: array
                                    type:
                                      description: Type defines the option of how
                                        status can be returned. It can be jsonPaths
                                        or wellKnownStatus. If the type is JSONPaths,
                                        user should specify the jsonPaths field If
                                        the type is WellKnownStatus, certain common
                                        fields of status defined by a rule only for
                                        types in in k8s.io/api and open-cluster-management/api
                                        will be reported, If these status fields do
                                        not exist, no values will be reported.
                                      enum:
                                      - WellKnownStatus
                                      - JSONPaths
                                      type: string
                                  required:
                                  - type
                                  type: object
                                type: array
                              resourceIdentifier:
                                description: ResourceIdentifier represents the group,
                                  resource, name and namespace of a resoure. iff this
                                  refers to a resource not created by this manifest
                                  work, the related rules will not be executed.
                                properties:
                                  group:
                                    description: Group is the API Group of the Kubernetes
                                      resource, empty string indicates it is in core
                                      group.
                                    type: string
                                  name:
                                    description: Name is the name of the Kubernetes
                                      resource.
                                    type: string
                                  namespace:
                                    description: Name is the namespace of the Kubernetes
                                      resource, empty string indicates it is a cluster
                                      scoped resource.
                                    type: string
                                  resource:
                                    description: Resource is the resource name of
                                      the Kubernetes resource.
                                    type: string
                                required:
                                - name
                                - resource
                                type: object
                            required:
                            - feedbackRules
                            - resourceIdentifier
                            type: object
                          type: array
                        workload:
                          description: Workload represents the manifest workload to
                            be deployed on a managed cluster.
                          properties:
                            manifests:
                              description: Manifests represents a list of kuberenetes
                                resources to be deployed on a managed cluster.
                              items:
                                description: Manifest represents a resource to be
                                  deployed on managed cluster.
                                type: object
                                x-kubernetes-embedded-resource: true
                                x-kubernetes-preserve-unknown-fields: true
                              type: array
                          type: object
                      type: object
                    status:
                      description: Status represents the current status of work.
                      properties:
                        conditions:
                          description: 'Conditions contains the different condition
                            statuses for this work. Valid condition types are: 1.
                            Applied represents workload in ManifestWork is applied
                            successfully on managed cluster. 2. Progressing represents
                            workload in ManifestWork is being applied on managed cluster.
                            3. Available represents workload in ManifestWork exists
                            on the managed cluster. 4. Degraded represents the current
                            state of workload does not match the desired state for
                            a certain period.'
                          items:
                            description: "Condition contains details for one aspect
                              of the current state of this API Resource. --- This
                              struct is intended for direct use as an array at the
                              field path .status.conditions.  For example, type FooStatus
                              struct{     // Represents the observations of a foo's
                              current state.     // Known .status.conditions.type
                              are: \"Available\", \"Progressing\", and \"Degraded\"
                              \    // +patchMergeKey=type     // +patchStrategy=merge
                              \    // +listType=map     // +listMapKey=type     Conditions
                              []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                              patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                              \n     // other fields }"
                            properties:
                              lastTransitionTime:
                                description: lastTransitionTime is the last time the
                                  condition transitioned from one status to another.
                                  This should be when the underlying condition changed.  If
                                  that is not known, then using the time when the
                                  API field changed is acceptable.
                                format: date-time
                                type: string
                              message:
                                description: message is a human readable message indicating
                                  details about the transition. This may be an empty
                                  string.
                                maxLength: 32768
                                type: string
                              observedGeneration:
                                description: observedGeneration represents the .metadata.generation
                                  that the condition was set based upon. For instance,
                                  if .metadata.generation is currently 12, but the
                                  .status.conditions[x].observedGeneration is 9, the
                                  condition is out of date with respect to the current
                                  state of the instance.
                                format: int64
                                minimum: 0
                                type: integer
                              reason:
                                description: reason contains a programmatic identifier
                                  indicating the reason for the condition's last transition.
                                  Producers of specific condition types may define
                                  expected values and meanings for this field, and
                                  whether the values are considered a guaranteed API.
                                  The value should be a CamelCase string. This field
                                  may not be empty.
                                maxLength: 1024
                                minLength: 1
                                pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                type: string
                              status:
                                description: status of the condition, one of True,
                                  False, Unknown.
                                enum:
                                - "True"
                                - "False"
                                - Unknown
                                type: string
                              type:
                                description: type of condition in CamelCase or in
                                  foo.example.com/CamelCase. --- Many .condition.type
                                  values are consistent across resources like Available,
                                  but because arbitrary conditions can be useful (see
                                  .node.status.conditions), the ability to deconflict
                                  is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                            required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                            type: object
                          type: array
                        resourceStatus:
                          description: ResourceStatus represents the status of each
                            resource in manifestwork deployed on a managed cluster.
                            The Klusterlet agent on managed cluster syncs the condition
                            from the managed cluster to the hub.
                          properties:
                            manifests:
                              description: 'Manifests represents the condition of
                                manifests deployed on managed cluster. Valid condition
                                types are: 1. Progressing represents the resource
                                is being applied on managed cluster. 2. Applied represents
                                the resource is applied successfully on managed cluster.
                                3. Available represents the resource exists on the
                                managed cluster. 4. Degraded represents the current
                                state of resource does not match the desired state
                                for a certain period.'
                              items:
                                description: ManifestCondition represents the conditions
                                  of the resources deployed on a managed cluster.
                                properties:
                                  conditions:
                                    description: Conditions represents the conditions
                                      of this resource on a managed cluster.
                                    items:
                                      description: "Condition contains details for
                                        one aspect of the current state of this API
                                        Resource. --- This struct is intended for
                                        direct use as an array at the field path .status.conditions.
                                        \ For example, type FooStatus struct{     //
                                        Represents the observations of a foo's current
                                        state.     // Known .status.conditions.type
                                        are: \"Available\", \"Progressing\", and \"Degraded\"
                                        \    // +patchMergeKey=type     // +patchStrategy=merge
                                        \    // +listType=map     // +listMapKey=type
                                        \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                                        patchStrategy:\"merge\" patchMergeKey:\"type\"
                                        protobuf:\"bytes,1,rep,name=conditions\"`
                                        \n     // other fields }"
                                      properties:
                                        lastTransitionTime:
                                          description: lastTransitionTime is the last
                                            time the condition transitioned from one
                                            status to another. This should be when
                                            the underlying condition changed.  If
                                            that is not known, then using the time
                                            when the API field changed is acceptable.
                                          format: date-time
                                          type: string
                                        message:
                                          description: message is a human readable
                                            message indicating details about the transition.
                                            This may be an empty string.
                                          maxLength: 32768
                                          type: string
                                        observedGeneration:
                                          description: observedGeneration represents
                                            the .metadata.generation that the condition
                                            was set based upon. For instance, if .metadata.generation
                                            is currently 12, but the .status.conditions[x].observedGeneration
                                            is 9, the condition is out of date with
                                            respect to the current state of the instance.
                                          format: int64
                                          minimum: 0
                                          type: integer
                                        reason:
                                          description: reason contains a programmatic
                                            identifier indicating the reason for the
                                            condition's last transition. Producers
                                            of specific condition types may define
                                            expected values and meanings for this
                                            field, and whether the values are considered
                                            a guaranteed API. The value should be
                                            a CamelCase string. This field may not
                                            be empty.
                                          maxLength: 1024
                                          minLength: 1
                                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                          type: string
                                        status:
                                          description: status of the condition, one
                                            of True, False, Unknown.
                                          enum:
                                          - "True"
                                          - "False"
                                          - Unknown
                                          type: string
                                        type:
                                          description: type of condition in CamelCase
                                            or in foo.example.com/CamelCase. --- Many
                                            .condition.type values are consistent
                                            across resources like Available, but because
                                            arbitrary conditions can be useful (see
                                            .node.status.conditions), the ability
                                            to deconflict is important. The regex
                                            it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                      required:
                                      - lastTransitionTime
                                      - message
                                      - reason
                                      - status
                                      - type
                                      type: object
                                    type: array
                                  resourceMeta:
                                    description: ResourceMeta represents the group,
                                      version, kind, name and namespace of a resoure.
                                    properties:
                                      group:
                                        description: Group is the API Group of the
                                          Kubernetes resource.
                                        type: string
                                      kind:
                                        description: Kind is the kind of the Kubernetes
                                          resource.
                                        type: string
                                      name:
                                        description: Name is the name of the Kubernetes
                                          resource.
                                        type: string
                                      namespace:
                                        description: Name is the namespace of the
                                          Kubernetes resource.
                                        type: string
                                      ordinal:
                                        description: Ordinal represents the index
                                          of the manifest on spec.
                                        format: int32
                                        type: integer
                                      resource:
                                        description: Resource is the resource name
                                          of the Kubernetes resource.
                                        type: string
                                      version:
                                        description: Version is the version of the
                                          Kubernetes resource.
                                        type: string
                                    type: object
                                  statusFeedback:
                                    description: StatusFeedback represents the values
                                      of the feild synced back defined in statusFeedbacks
                                    properties:
                                      values:
                                        description: Values represents the synced
                                          value of the interested field.
                                        items:
                                          properties:
                                            fieldValue:
                                              description: Value is the value of the
                                                status field. The value of the status
                                                field can only be integer, string
                                                or boolean.
                                              properties:
                                                boolean:
                                                  description: Boolean is bool value
                                                    when type is boolean.
                                                  type: boolean
                                                integer:
                                                  description: Integer is the integer
                                                    value when type is integer.
                                                  format: int64
                                                  type: integer
                                                string:
                                                  description: String is the string
                                                    value when when type is string.
                                                  type: string
                                                type:
                                                  description: Type represents the
                                                    type of the value, it can be integer,
                                                    string or boolean.
                                                  enum:
                                                  - Integer
                                                  - String
                                                  - Boolean
                                                  type: string
                                              required:
                                              - type
                                              type: object
                                            name:
                                              description: Name represents the alias
                                                name for this field. It is the same
                                                as what is specified in StatuFeedbackRule
                                                in the spec.
                                              type: string
                                          required:
                                          - fieldValue
                                          - name
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                        - name
                                        x-kubernetes-list-type: map
                                    type: object
                                type: object
                              type: array
                          type: object
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: ManagedClusterGroupWorkStatus defines the observed state
              of ManagedClusterGroupWork
            properties:
              clusters:
                description: List of the selected managedClusters with act status
                items:
                  description: ClusterWorkState indicate the selected clusters manifest
                    work status
                  properties:
                    manifestWorkFeedback:
                      additionalProperties:
                        type: string
                      description: ManagedCluster manifest work feedback fields
                      type: object
                    manifestWorkState:
                      description: ManagedCluster manifest work resources state
                      type: string
                    name:
                      description: ManagedCluster Name
                      type: string
                  required:
                  - name
                  type: object
                type: array
              conditions:
                description: List of the ManagedClusterGroupAct conditions
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
